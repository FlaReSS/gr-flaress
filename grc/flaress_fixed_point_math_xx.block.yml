# auto-generated by grc.converter

id: flaress_fixed_point_math_xx
label: Fixed Point Math
category: '[flaress]'

parameters:
-   id: type
    label: IO Type
    dtype: enum
    default: complex
    options: [complex, float, f64]
    option_labels: [Complex, Float, Double]
    option_attributes:
        fcn: [cc, ff, dd]
    hide: part
-   id: vlen
    label: Vec Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: N_int
    label: N of bits integer part
    dtype: int
-   id: N_frac
    label: N of bits fractional part
    dtype: int

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }

outputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }
asserts:
- ${ vlen > 0 }

templates:
    imports: import flaress
    make: flaress.fixed_point_math_${type.fcn}(${vlen}, ${N_int}, ${N_frac})

file_format: 1
